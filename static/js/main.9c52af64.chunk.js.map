{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","App.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","index","key","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","hits","catch","err","console","log","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8KAwCeA,EAtCG,SAAC,GAAc,IAAZC,EAAW,EAAXA,MACXC,EAAOD,EAAMC,KAAKC,MAAM,KAE9B,OACI,yBAAKC,UAAY,8CACjB,yBAAKC,IAAQJ,EAAMK,aAAeC,IAAM,GAAGH,UAAY,WACvD,yBAAKA,UAAY,aACf,yBAAKA,UAAY,0CAAjB,YACaH,EAAMO,MAEnB,4BACE,4BACE,2CACEP,EAAMQ,OAEV,4BACE,+CACER,EAAMS,WAEV,4BACE,2CACET,EAAMU,SAId,yBAAKP,UAAY,aAEXF,EAAKU,KAAK,SAACC,EAAIC,GAAL,OACR,0BAAOC,IAAOD,EAAOV,UAAY,4FAAjC,IACMS,SCRPG,EArBK,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,WAAgB,EACXC,mBAAS,IADE,mBAC5BC,EAD4B,KACtBC,EADsB,KAOnC,OACI,yBAAKhB,UAAY,kDACb,0BAAMiB,SAPG,SAACC,GACdA,EAAEC,iBACFN,EAAWE,IAKuBf,UAAY,mBACtC,yBAAKA,UAAY,8DACb,2BAAOoB,SAAa,SAAAF,GAAC,OAAIF,EAAQE,EAAEG,OAAOC,QAAStB,UAAY,kHAAkHuB,KAAO,OAAOC,YAAc,yBAC7M,4BAAQxB,UAAY,kIAAkIuB,KAAO,UAA7J,cCwBLE,MAlCf,WAAgB,IAAD,EACeX,mBAAS,IADxB,mBACNY,EADM,KACEC,EADF,OAEqBb,oBAAS,GAF9B,mBAENc,EAFM,KAEKC,EAFL,OAGWf,mBAAS,IAHpB,mBAGNgB,EAHM,KAGAC,EAHA,KAeb,OAVAC,qBAAW,WACTC,MAAM,gCAAD,OAAiCC,qCAAjC,cAA4EJ,EAA5E,kCACJK,MAAM,SAAAC,GAAG,OAAIA,EAAIC,UACjBF,MAAM,SAAAG,GACLX,EAAUW,EAAKC,MACfV,GAAa,MAEdW,OAAO,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC1B,CAACX,IAGA,yBAAK9B,UAAY,qBACf,kBAAC,EAAD,CAAaa,WAAe,SAACE,GAAD,OAAUgB,EAAQhB,OAC5Ca,GAA+B,IAAlBF,EAAOkB,QAAgB,wBAAI5C,UAAY,sCAAhB,mBAEpC4B,EACA,wBAAI5B,UAAY,sCAAhB,WACA,yBAAKA,UAAY,0BAEf0B,EAAOlB,KAAK,SAAAX,GAAK,OACf,kBAAC,EAAD,CAAWc,IAAOd,EAAMgD,GAAIhD,MAASA,UCxBnDiD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.9c52af64.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ImageCard = ({ image }) =>{\r\n    const tags = image.tags.split(',');\r\n\r\n    return(\r\n        <div className = \"max-w-sm rounded overflow-hidden shadow-lg\">\r\n        <img src = { image.webformatURL } alt = \"\" className = \"w-full\" />\r\n        <div className = \"px-6 py-4\">\r\n          <div className = \"font-bold text-purple-500 text-xl mb-2\">\r\n            Photo by { image.user }\r\n          </div>\r\n          <ul>\r\n            <li>\r\n              <strong>Views: </strong>\r\n              { image.views }\r\n            </li>\r\n            <li>\r\n              <strong>Downloads: </strong>\r\n              { image.downloads }\r\n            </li>\r\n            <li>\r\n              <strong>Likes: </strong>\r\n              { image.likes }\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className = \"px-6 py-4\">\r\n          {\r\n              tags.map( (tag,index) => (\r\n                <span  key = {index} className = \"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">\r\n                    #{tag}\r\n                </span>\r\n              ) )\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ImageCard;","import React, { useState } from 'react';\r\n\r\nconst ImageSearch = ({ searchText }) =>{\r\n    const [text, setText] = useState('');\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        searchText(text);\r\n    }\r\n\r\n    return(\r\n        <div className = \"max-w-sm rounded overflow-hidden my-10 mx-auto\">\r\n            <form onSubmit = { onSubmit } className = \"w-full max-w-sm\">\r\n                <div className = \"flex items-center border-b border-b-2 border-teal-500 py-2\">\r\n                    <input onChange = { e => setText(e.target.value) } className = \"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\" type = \"text\" placeholder = \"Search Image Term...\" />\r\n                    <button className = \"flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded\" type = \"submit\" >\r\n                        Search\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageSearch;","import React, { useState, useEffect} from 'react';\nimport ImageCard from './components/ImageCard';\nimport ImageSearch from './components/ImageSearch';\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState('');\n\n  useEffect( () =>{\n    fetch(`https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`)\n    .then( res => res.json())\n    .then( data =>{\n      setImages(data.hits);\n      setIsLoading(false);\n    })\n    .catch( err => console.log(err) );\n  }, [term] );\n\n  return (\n      <div className = \"container mx-auto\">\n        <ImageSearch searchText = { (text) => setTerm(text) }/>\n        {!isLoading && images.length === 0 && <h1 className = \"text-5xl text-center mx-auto mt-32\" >No Images Found</h1>}\n        {\n          isLoading ? \n          <h1 className = \"text-6xl text-center mx-auto mt-32\" >Loading</h1> :\n          <div className = \"grid grid-cols-3 gap-4\">\n            {\n            images.map( image => (\n              <ImageCard key = {image.id} image = {image} />\n            ))\n            }\n          </div>\n        }\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}